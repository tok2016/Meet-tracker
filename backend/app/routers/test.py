#from .ollama_functions import OllamaFunctions
#from langchain_ollama import OllamaLLM

#Whsiper модель
#model_size = "large-v3"
#Llama модель
#model = OllamaLLM(model="ilyagusev/saiga_llama3", format="json", base_url="http://127.0.0.1:11434/")
#text = "Start - 00:00. End - 27:00. Speaker 1: Я только сейчас понял, что менять структуру JSON не стоит от слова совсем.  Может, на бэке ее не очень сложно поменять, но у меня с TypeScript реализовать это нереалистично.  Speaker 0: Ну, как вариант, можно это реализовать с большим красным текстом, не рекомендовано. Speaker 1: А я это уже сверстал.  Сверстал и не подумал, что это полнейшая чушь, ибо фронтенд придется вручную менять каждый раз.  "
text = """
{
  "text": "Организация работы команды на проекте, обсуждение технических требований и инструментов для разработки, планирование встреч и отчетности. Обсуждение цвета бренда CSB и возможности его настройки пользователем.",
  "topic": "Работа над проектом",
  "start": "00:00:00,000",
  "end": "00:27:16,620",
  "speakers":
    [
      {
        "speaker_name": "Speaker 0",
        "speaker_info": "Представил себя и команду, обсудил цель проекта и его ключевые особенности. Предложил инструменты для управления задачами (Яндекс Трекер) и контроля версий (GitHub). Обсудил формат отчетности и возможности настройки цвета бренда CSB."
      },
      {
        "speaker_name": "Speaker 1",
        "speaker_info": "Выразил поддержку идеи проекта, представил опыт работы с аналогичным проектом. Обсудил технические детали проекта и выбранный стек технологий."
      },
      {
        "speaker_name": "Speaker 2",
        "speaker_info": "Участник команды Паши, занимается аналитикой в команде."
      },
      {
        "speaker_name": "Speaker 3",
        "speaker_info": "Приветствовал идею проекта и представил себя как дизайнера. Участник команды Паши."
      }
    ]
}
"""
#x = model.invoke(f"Дай краткое содержание текста - {text}. Определи тему. Определи время начала и конца текста. Зафиксируй разных спикеров (в формате Speaker 0 без определения настоящего имени), резюме речи каждого и их последующие задачи (без повторений).  Ответь ТОЛЬКО в формате json: {json}")

#print(x)

from fpdf import FPDF

pdf = FPDF()
pdf.add_page()
pdf.add_font('DejaVuSans', '', 'backend/app/fonts/DejaVuSans.ttf')
pdf.set_font('DejaVuSans', size=14)
pdf.write(text=text)
pdf.output("backend/app/texts/summary.pdf")