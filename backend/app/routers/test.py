from langchain_ollama import OllamaLLM
import json

#Whsiper модель
#model_size = "large-v3"
#Llama модель
#model = OllamaLLM(model="ilyagusev/saiga_llama3", format="json", base_url="http://127.0.0.1:11434/")
#text = "Start - 00:00. End - 27:00. Speaker 1: Я только сейчас понял, что менять структуру JSON не стоит от слова совсем.  Может, на бэке ее не очень сложно поменять, но у меня с TypeScript реализовать это нереалистично.  Speaker 0: Ну, как вариант, можно это реализовать с большим красным текстом, не рекомендовано. Speaker 1: А я это уже сверстал.  Сверстал и не подумал, что это полнейшая чушь, ибо фронтенд придется вручную менять каждый раз.  "
text = """
{
  "text": "Организация работы команды на проекте, обсуждение технических требований и инструментов для разработки, планирование встреч и отчетности. Обсуждение цвета бренда CSB и возможности его настройки пользователем.",
  "topic": "Работа над проектом",
  "start": "00:00:00,000",
  "end": "00:27:16,620",
  "speakers":
    [
      {
        "speaker_name": "Speaker 0",
        "speaker_info": "Представил себя и команду, обсудил цель проекта и его ключевые особенности. Предложил инструменты для управления задачами (Яндекс Трекер) и контроля версий (GitHub). Обсудил формат отчетности и возможности настройки цвета бренда CSB."
      },
      {
        "speaker_name": "Speaker 1",
        "speaker_info": "Выразил поддержку идеи проекта, представил опыт работы с аналогичным проектом. Обсудил технические детали проекта и выбранный стек технологий."
      },
      {
        "speaker_name": "Speaker 2",
        "speaker_info": "Участник команды Паши, занимается аналитикой в команде."
      },
      {
        "speaker_name": "Speaker 3",
        "speaker_info": "Приветствовал идею проекта и представил себя как дизайнера. Участник команды Паши."
      }
    ]
    }
"""
text3 = """
00:00:01,740 - 00:00:34,000 Speaker 0: у нас это адаптив я сделал до мобилок как все выглядит вот сейчас веду так в общем Вот, собственно говоря, адаптив сам, как все выглядит.

00:00:34,040 - 00:00:46,020 Speaker 0: Сейчас я переключусь обратно на экран компьютера, потому что мне так удобнее.

00:00:48,700 - 00:00:52,300 Speaker 0: Также делали сохранение этой цветовой гаммы на бэке.

00:00:56,340 - 00:00:59,500 Speaker 0: И вот еще попытались с почтой разобраться.

00:00:59,540 - 00:01:04,379 Speaker 0: В требованиях было сказано выбор протокола.

00:01:05,640 - 00:01:09,900 Speaker 0: Как-то мы не особо можем разобраться, где вообще использовать его.

00:01:12,260 - 00:01:19,320 Speaker 0: А также загрузка верстки письма.

00:01:34,620 - 00:02:47,840 Speaker 0: и сразу делать еще проверка на то есть там текст скрипт это на всякий случай чтобы не было всяких инъекции других инъекций вот так еще формирование файла три типа это текстовый pdf и wordовский документ Сейчас еще пока ничего не видно, загружается.

00:02:48,440 - 00:02:48,880 Speaker 1: Видно теперь.

00:02:53,060 - 00:02:57,520 Speaker 0: Так, ну и... Ну и все, собственно говоря.

00:03:00,260 - 00:03:08,320 Speaker 0: Ну и также аналитик собрал данные по этим платформам видеозвонков.

00:03:09,900 - 00:03:17,640 Speaker 0: Как я написал, у нас там из всех TrueConf... Он имеет бесплатный SDK API, но тоже ограниченный.

00:03:20,160 - 00:03:21,700 Speaker 0: Мы, наверное, только на нем остановимся.

00:03:30,280 - 00:03:31,600 Speaker 1: Так, ну и что, когда?

00:03:32,280 - 00:03:33,080 Speaker 1: К следующей встрече?

00:03:36,960 - 00:03:41,580 Speaker 0: Так, к следующей встрече... Мы, наверное, не успеем это сделать.

00:03:41,680 - 00:03:45,140 Speaker 0: Потому что нам еще...

00:03:49,780 - 00:03:50,600 Speaker 1: Илья, наоборот, пропадает.

00:03:50,740 - 00:03:51,200 Speaker 1: Повтори еще раз.

00:03:52,600 - 00:03:53,920 Speaker 0: А, вы пропадаете.

00:03:55,360 - 00:03:58,080 Speaker 0: Мы, наверное, интеграцию не успеем к следующей встрече сделать.

00:03:58,400 - 00:04:04,180 Speaker 0: Вряд ли, потому что, как минимум, мне нужно еще делать адаптив под средний экран.

00:04:04,220 - 00:04:06,080 Speaker 0: Пока что сделал только под мобилки.

00:04:06,620 - 00:04:12,400 Speaker 0: Плюс еще надо мне здесь обрабатывать и выводить ошибки, потому что пока этого я ничего не делал.

00:04:14,100 - 00:04:17,380 Speaker 0: Ну и надо исправлять другой функционал.

00:04:19,180 - 00:04:21,740 Speaker 0: Доводить его до более лучшего состояния.

00:04:23,400 - 00:04:24,020 Speaker 0: Ну да, хорошо.

00:04:24,080 - 00:04:26,980 Speaker 1: Тогда давайте до следующей встречи.

00:04:27,360 - 00:04:29,020 Speaker 2: Не, а можно вопрос?

00:04:29,780 - 00:04:30,420 Speaker 2: Вопрос один.

00:04:31,480 - 00:04:40,100 Speaker 2: Вот то, что по почте мы там POP-TRI и IMAP, непонятно, где они используются.

00:04:41,560 - 00:04:46,840 Speaker 2: Просто эти... Эти штуки, они для просмотра писем?

00:04:47,960 - 00:04:51,360 Speaker 2: Как бы, вот где это используется?

00:04:54,480 - 00:05:02,040 Speaker 1: Слушайте, ну если вам действительно нет необходимости в просмотре писем, то можете, ну, использовать.

00:05:02,100 - 00:05:03,440 Speaker 1: Ага, хорошо.

00:05:05,720 - 00:05:16,700 Speaker 1: Просто если, например, у вас там, ну, допустим, отслеживание треда письма, да, то есть... Допустим, письмо о том, что будет встреча в Outlook.

00:05:17,480 - 00:05:23,980 Speaker 1: И, наверное, при таком действии может потребоваться такой интеграции взаимодействия уже с письмом.

00:05:24,720 - 00:05:26,420 Speaker 1: А если нет, значит нет.

00:05:29,280 - 00:05:29,640 Speaker 2: Понятно.

00:05:36,360 - 00:05:37,000 Speaker 1: Ну ладно тогда.

00:05:37,560 - 00:05:39,820 Speaker 1: Всем тебе хорошего вечера.

00:05:40,660 - 00:05:52,080 Speaker 0: Пока.
"""
text1 = '"text": "{\n  \"text\": \"Краткое содержание текста: Дискуссия о правильности изменения структуры JSON. Один из участников утверждает, что это не стоит делать, так как реализация на TypeScript может быть сложной. Другой спикер предлагает временное решение с использованием большого красного текста.\",\n  \"topic\": \"Изменение структуры JSON\",\n  \"start\": \"00:00:00\",\n  \"end\": \"00:00:26,680\",\n  \"speakers\":\n    [\n      {\n        \"speaker_name\": \"Speaker 1\",\n        \"speaker_info\": \"Утверждает, что изменять структуру JSON не стоит от слова совсем, так как это может быть сложно реализовать с TypeScript.\"\n      },\n      {\n        \"speaker_name\": \"Speaker 0\",\n        \"speaker_info\": \"Предлагает временное решение с использованием большого красного текста.\"\n      }\n    ]\n}" '
json_response = """
  "segments":
  [
    {
      text: "Краткое содержание отрывка",
      topic: "Тема отрывка",
      start: "Время начала отрывка",
      end: "Время конца отрывка",
      speakers: 
        [
          {
            speaker_name: "Имя спикера в формате Speaker 0",
            speaker_info: "Резюме речи спикера",
          },
        ],
    }
  ]
"""
json_text = """
{
  "segments": [
    {
      "text": "Обсуждение проблемы с резюме на русском языке и ускорением процесса распознавания речи",
      "topic": "Резюме на русском языке, процесс распознавания речи",
      "start": "00:00:03,180",
      "end": "00:07:43,020",
      "speakers": [
        {
          "speaker_name": "Speaker 0",
          "speaker_info": "Неплохой результат, вопрос о подробности общей суммаризации"
        },
        {
          "speaker_name": "Speaker 1",
          "speaker_info": "Проблемы с распознаванием на русском языке, использование пользовательской ламы и ускорение процесса"
        },
        {
          "speaker_name": "Speaker 2",
          "speaker_info": "Поддержка использования другой ламы для улучшения работы на русском языке"
        }
      ]
    },
    {
      "text": "Обсуждение конфигурации JSON и влияния на работу системы распознавания речи",
      "topic": "Конфигурация JSON, система распознавания речи",
      "start": "00:07:43,020",
      "end": "00:14:15,300",
      "speakers": [
        {
          "speaker_name": "Speaker 0",
          "speaker_info": "Вопрос о необходимости изменения конфигурации JSON"
        },
        {
          "speaker_name": "Speaker 1",
          "speaker_info": "Изменения в настройках распознавания речи, использование других моделей LLM и JSON формата"
        }
      ]
    },
    {
      "text": "Планы по дальнейшей работе: связывание с бэком, добавление настроек для пользователей",
      "topic": "Планы работы, интеграция с бэком",
      "start": "00:14:15,300",
      "end": "00:19:23,240",
      "speakers": [
        {
          "speaker_name": "Speaker 0",
          "speaker_info": "Планируемые действия после встречи"
        },
        {
          "speaker_name": "Speaker 1",
          "speaker_info": "Работа над интеграцией с бэком и добавлением настроек для пользователей"
        }
      ]
    }
  ]
}
"""
#summary_common = model.invoke(f"Дай краткое содержание текста - {text}. Определи тему. Определи время начала и конца текста. Зафиксируй разных спикеров (в формате Speaker 0 без определения настоящего имени) и резюме речи каждого (без повторений).  Ответь ТОЛЬКО в формате json: {json_response}")
#summary_common = model.invoke(f"Определи важные темы и отрывки в тексте: '{text3}'. Дай краткое содержание каждого отрывка. Определи тему отрывка. Определи время начала и конца отрывка. Зафиксируй разных спикеров (в формате Speaker 0 без определения настоящего имени) и резюме речи каждого (без повторений).  Ответь ТОЛЬКО в формате json: {json_response}")
#print(summary_common)
string_text = ""
dict_data = json.loads(json_text)
dict_data_seg = dict_data["segments"]
for segment in dict_data_seg:
  string_text += "Тема: " + f"{segment["topic"]}" +"\n"
  string_text = string_text + "Начало: " + f"{segment["start"]}," +"\n"
  string_text = string_text + "Конец: " + f"{segment["end"]}." +"\n"
  string_text = string_text + f"{segment["text"]}" +"\n"
  speakers_dict = segment["speakers"]
  for i in speakers_dict:
    string_text = string_text + f"{i["speaker_name"]}: " + f"{i["speaker_info"]}" +"\n"
  string_text += "\n"
print(string_text)